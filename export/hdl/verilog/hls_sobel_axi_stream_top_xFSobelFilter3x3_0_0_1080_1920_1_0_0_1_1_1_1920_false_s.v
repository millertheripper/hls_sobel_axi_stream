// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_buf_1_473_dout,
        img_buf_1_473_empty_n,
        img_buf_1_473_read,
        img_buf_1a_474_din,
        img_buf_1a_474_full_n,
        img_buf_1a_474_write,
        img_buf_1b_475_din,
        img_buf_1b_475_full_n,
        img_buf_1b_475_write,
        img_height,
        img_width
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_state5 = 7'd4;
parameter    ap_ST_fsm_state6 = 7'd8;
parameter    ap_ST_fsm_pp1_stage0 = 7'd16;
parameter    ap_ST_fsm_state14 = 7'd32;
parameter    ap_ST_fsm_state15 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] img_buf_1_473_dout;
input   img_buf_1_473_empty_n;
output   img_buf_1_473_read;
output  [7:0] img_buf_1a_474_din;
input   img_buf_1a_474_full_n;
output   img_buf_1a_474_write;
output  [7:0] img_buf_1b_475_din;
input   img_buf_1b_475_full_n;
output   img_buf_1b_475_write;
input  [15:0] img_height;
input  [15:0] img_width;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg img_buf_1_473_read;
reg[7:0] img_buf_1a_474_din;
reg img_buf_1a_474_write;
reg[7:0] img_buf_1b_475_din;
reg img_buf_1b_475_write;

(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    img_buf_1_473_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln882_reg_633;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln882_2_reg_689;
reg   [0:0] cmp_i_i533_i_reg_681;
reg    img_buf_1a_474_blk_n;
reg    ap_enable_reg_pp1_iter6;
reg   [0:0] icmp_ln874_2_reg_717;
reg   [0:0] icmp_ln874_2_reg_717_pp1_iter5_reg;
wire    ap_CS_fsm_state15;
reg    img_buf_1b_475_blk_n;
reg   [12:0] empty_reg_203;
reg   [12:0] empty_41_reg_238;
reg   [12:0] empty_41_reg_238_pp1_iter1_reg;
wire    ap_block_state7_pp1_stage0_iter0;
reg    ap_predicate_op91_read_state8;
reg    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
wire    ap_block_state10_pp1_stage0_iter3;
wire    ap_block_state11_pp1_stage0_iter4;
wire    ap_block_state12_pp1_stage0_iter5;
reg    ap_block_state13_pp1_stage0_iter6;
reg    ap_block_pp1_stage0_11001;
reg   [7:0] p_Val2_2_reg_250;
reg   [7:0] src_buf2_0_V_reg_262;
reg   [7:0] src_buf2_0_V_reg_262_pp1_iter5_reg;
reg   [7:0] p_Val2_1_reg_274;
reg   [7:0] src_buf3_0_V_reg_287;
reg   [7:0] src_buf3_0_V_reg_287_pp1_iter5_reg;
reg   [7:0] src_buf1_0_V_reg_300;
reg   [7:0] src_buf1_0_V_reg_300_pp1_iter5_reg;
reg   [7:0] p_Val2_s_reg_312;
reg   [7:0] reg_385;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln882_fu_396_p2;
reg   [0:0] icmp_ln882_reg_633_pp0_iter1_reg;
wire   [12:0] add_ln695_fu_401_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln538_fu_407_p1;
reg   [63:0] zext_ln538_reg_642;
reg   [63:0] zext_ln538_reg_642_pp0_iter1_reg;
wire   [16:0] op2_assign_fu_415_p2;
reg   [16:0] op2_assign_reg_672;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln882_1_fu_425_p2;
wire    ap_CS_fsm_state6;
wire   [0:0] cmp_i_i533_i_fu_509_p2;
wire   [1:0] trunc_ln324_fu_514_p1;
reg   [1:0] trunc_ln324_reg_685;
wire   [0:0] icmp_ln882_2_fu_522_p2;
reg   [0:0] icmp_ln882_2_reg_689_pp1_iter1_reg;
reg   [0:0] icmp_ln882_2_reg_689_pp1_iter2_reg;
reg   [0:0] icmp_ln882_2_reg_689_pp1_iter3_reg;
reg   [0:0] icmp_ln882_2_reg_689_pp1_iter4_reg;
reg   [0:0] icmp_ln882_2_reg_689_pp1_iter5_reg;
wire   [12:0] add_ln695_3_fu_527_p2;
reg   [12:0] add_ln695_3_reg_693;
reg    ap_enable_reg_pp1_iter0;
reg   [1:0] p_load40_reg_698;
reg   [1:0] p_load40_reg_698_pp1_iter1_reg;
reg   [10:0] buf_0_V_addr_1_reg_702;
reg   [10:0] buf_1_V_addr_1_reg_707;
reg   [10:0] buf_2_V_addr_reg_712;
wire   [0:0] icmp_ln874_2_fu_540_p2;
reg   [0:0] icmp_ln874_2_reg_717_pp1_iter3_reg;
reg   [0:0] icmp_ln874_2_reg_717_pp1_iter4_reg;
wire   [7:0] src_buf1_2_V_fu_549_p5;
reg   [7:0] src_buf1_2_V_reg_721;
reg    ap_enable_reg_pp1_iter4;
wire   [7:0] src_buf2_2_V_fu_561_p5;
reg   [7:0] src_buf2_2_V_reg_727;
wire   [7:0] src_buf3_2_V_fu_573_p5;
reg   [7:0] src_buf3_2_V_reg_733;
wire   [12:0] select_ln451_fu_607_p3;
reg   [12:0] select_ln451_reg_739;
wire    ap_CS_fsm_state14;
wire   [12:0] add_ln695_2_fu_615_p2;
reg   [12:0] add_ln695_2_reg_744;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter5;
reg    ap_condition_pp1_exit_iter4_state11;
reg    buf_0_V_ce0;
wire   [7:0] buf_0_V_q0;
reg   [10:0] buf_0_V_address1;
reg    buf_0_V_ce1;
reg    buf_0_V_we1;
reg   [7:0] buf_0_V_d1;
reg    buf_1_V_ce0;
wire   [7:0] buf_1_V_q0;
reg   [10:0] buf_1_V_address1;
reg    buf_1_V_ce1;
reg    buf_1_V_we1;
reg   [7:0] buf_1_V_d1;
reg    buf_2_V_ce0;
wire   [7:0] buf_2_V_q0;
wire   [10:0] buf_2_V_address1;
reg    buf_2_V_ce1;
reg    buf_2_V_we1;
reg   [7:0] buf_2_V_d1;
wire   [7:0] grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_0;
wire   [7:0] grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_1;
reg    grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce;
wire    ap_block_state7_pp1_stage0_iter0_ignore_call9;
reg    ap_block_state8_pp1_stage0_iter1_ignore_call9;
wire    ap_block_state9_pp1_stage0_iter2_ignore_call9;
wire    ap_block_state10_pp1_stage0_iter3_ignore_call9;
wire    ap_block_state11_pp1_stage0_iter4_ignore_call9;
wire    ap_block_state12_pp1_stage0_iter5_ignore_call9;
reg    ap_block_state13_pp1_stage0_iter6_ignore_call9;
reg    ap_block_pp1_stage0_11001_ignoreCallOp131;
wire   [7:0] grp_xFGradientX3x3_0_0_s_fu_342_ap_return;
reg    grp_xFGradientX3x3_0_0_s_fu_342_ap_ce;
reg    ap_block_state15;
reg    ap_block_state15_ignore_call0;
wire   [7:0] grp_xFGradientY3x3_0_0_s_fu_359_ap_return;
reg    grp_xFGradientY3x3_0_0_s_fu_359_ap_ce;
reg    ap_block_state15_ignore_call1;
reg   [12:0] empty_39_reg_214;
wire   [12:0] ap_phi_mux_empty_40_phi_fu_230_p4;
reg   [12:0] empty_40_reg_226;
reg   [12:0] ap_phi_mux_empty_41_phi_fu_242_p4;
reg   [7:0] ap_phi_mux_p_Val2_2_phi_fu_254_p4;
reg   [7:0] ap_phi_mux_p_Val2_1_phi_fu_278_p4;
reg   [7:0] ap_phi_mux_p_Val2_s_phi_fu_316_p4;
wire   [63:0] zext_ln538_1_fu_533_p1;
reg   [1:0] empty_36_fu_94;
wire   [1:0] select_ln373_fu_470_p3;
reg   [1:0] empty_37_fu_98;
wire   [1:0] select_ln373_1_fu_478_p3;
reg   [1:0] empty_38_fu_102;
wire   [1:0] select_ln373_2_fu_486_p3;
reg    ap_block_pp1_stage0_01001;
wire   [15:0] zext_ln882_fu_392_p1;
wire   [16:0] img_height_cast_fu_412_p1;
wire   [16:0] zext_ln882_2_fu_421_p1;
wire   [0:0] icmp_ln874_fu_464_p2;
wire   [15:0] zext_ln882_1_fu_430_p1;
wire   [15:0] zext_ln882_3_fu_518_p1;
wire   [12:0] add_ln695_1_fu_595_p2;
wire   [0:0] icmp_ln874_1_fu_601_p2;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_675;
reg    ap_condition_679;
reg    ap_condition_420;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
end

hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_0_V_addr_1_reg_702),
    .ce0(buf_0_V_ce0),
    .q0(buf_0_V_q0),
    .address1(buf_0_V_address1),
    .ce1(buf_0_V_ce1),
    .we1(buf_0_V_we1),
    .d1(buf_0_V_d1)
);

hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_1_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_1_V_addr_1_reg_707),
    .ce0(buf_1_V_ce0),
    .q0(buf_1_V_q0),
    .address1(buf_1_V_address1),
    .ce1(buf_1_V_ce1),
    .we1(buf_1_V_we1),
    .d1(buf_1_V_d1)
);

hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V #(
    .DataWidth( 8 ),
    .AddressRange( 1920 ),
    .AddressWidth( 11 ))
buf_2_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(buf_2_V_addr_reg_712),
    .ce0(buf_2_V_ce0),
    .q0(buf_2_V_q0),
    .address1(buf_2_V_address1),
    .ce1(buf_2_V_ce1),
    .we1(buf_2_V_we1),
    .d1(buf_2_V_d1)
);

hls_sobel_axi_stream_top_xFSobel3x3_1_1_0_0_s grp_xFSobel3x3_1_1_0_0_s_fu_325(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_read2(ap_phi_mux_p_Val2_s_phi_fu_316_p4),
    .p_read5(src_buf1_0_V_reg_300),
    .p_read6(src_buf1_2_V_reg_721),
    .p_read7(ap_phi_mux_p_Val2_1_phi_fu_278_p4),
    .p_read8(src_buf2_2_V_reg_727),
    .p_read9(ap_phi_mux_p_Val2_2_phi_fu_254_p4),
    .p_read10(src_buf3_0_V_reg_287),
    .p_read11(src_buf3_2_V_reg_733),
    .ap_return_0(grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_0),
    .ap_return_1(grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_1),
    .ap_ce(grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce)
);

hls_sobel_axi_stream_top_xFGradientX3x3_0_0_s grp_xFGradientX3x3_0_0_s_fu_342(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .t0(p_Val2_s_reg_312),
    .t2(8'd0),
    .m0(p_Val2_1_reg_274),
    .m2(8'd0),
    .b0(p_Val2_2_reg_250),
    .b2(8'd0),
    .ap_return(grp_xFGradientX3x3_0_0_s_fu_342_ap_return),
    .ap_ce(grp_xFGradientX3x3_0_0_s_fu_342_ap_ce)
);

hls_sobel_axi_stream_top_xFGradientY3x3_0_0_s grp_xFGradientY3x3_0_0_s_fu_359(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .t0(p_Val2_s_reg_312),
    .t1(src_buf1_0_V_reg_300),
    .t2(8'd0),
    .b0(p_Val2_2_reg_250),
    .b1(src_buf3_0_V_reg_287),
    .b2(8'd0),
    .ap_return(grp_xFGradientY3x3_0_0_s_fu_359_ap_return),
    .ap_ce(grp_xFGradientY3x3_0_0_s_fu_359_ap_ce)
);

hls_sobel_axi_stream_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U56(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_38_fu_102),
    .dout(src_buf1_2_V_fu_549_p5)
);

hls_sobel_axi_stream_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U57(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_37_fu_98),
    .dout(src_buf2_2_V_fu_561_p5)
);

hls_sobel_axi_stream_top_mux_32_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_32_8_1_1_U58(
    .din0(buf_0_V_q0),
    .din1(buf_1_V_q0),
    .din2(buf_2_V_q0),
    .din3(empty_36_fu_94),
    .dout(src_buf3_2_V_fu_573_p5)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter4_state11)) begin
                ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter3;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter6 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        if ((~(ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd2) & ~(ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd0))) begin
            empty_36_fu_94 <= select_ln373_fu_470_p3;
        end else if ((ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd2)) begin
            empty_36_fu_94 <= 2'd2;
        end else if ((ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd0)) begin
            empty_36_fu_94 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        if ((~(ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd2) & ~(ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd0))) begin
            empty_37_fu_98 <= select_ln373_1_fu_478_p3;
        end else if ((ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd2)) begin
            empty_37_fu_98 <= 2'd1;
        end else if ((ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd0)) begin
            empty_37_fu_98 <= 2'd2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        if ((~(ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd2) & ~(ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd0))) begin
            empty_38_fu_102 <= select_ln373_2_fu_486_p3;
        end else if ((ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd2)) begin
            empty_38_fu_102 <= 2'd0;
        end else if ((ap_phi_mux_empty_40_phi_fu_230_p4 == 13'd0)) begin
            empty_38_fu_102 <= 2'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
        empty_39_reg_214 <= add_ln695_2_reg_744;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_39_reg_214 <= 13'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
        empty_40_reg_226 <= select_ln451_reg_739;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        empty_40_reg_226 <= 13'd2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln882_2_reg_689 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_41_reg_238 <= add_ln695_3_reg_693;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        empty_41_reg_238 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_396_p2 == 1'd1))) begin
        empty_reg_203 <= add_ln695_fu_401_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_203 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_2_reg_689_pp1_iter5_reg == 1'd1))) begin
        p_Val2_1_reg_274 <= src_buf2_0_V_reg_262_pp1_iter5_reg;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        p_Val2_1_reg_274 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_2_reg_689_pp1_iter5_reg == 1'd1))) begin
        p_Val2_2_reg_250 <= src_buf3_0_V_reg_287_pp1_iter5_reg;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        p_Val2_2_reg_250 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_2_reg_689_pp1_iter5_reg == 1'd1))) begin
        p_Val2_s_reg_312 <= src_buf1_0_V_reg_300_pp1_iter5_reg;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        p_Val2_s_reg_312 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter4_reg == 1'd1))) begin
        src_buf1_0_V_reg_300 <= src_buf1_2_V_reg_721;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        src_buf1_0_V_reg_300 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter4_reg == 1'd1))) begin
        src_buf2_0_V_reg_262 <= src_buf2_2_V_reg_727;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        src_buf2_0_V_reg_262 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter4_reg == 1'd1))) begin
        src_buf3_0_V_reg_287 <= src_buf3_2_V_reg_733;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        src_buf3_0_V_reg_287 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        add_ln695_2_reg_744 <= add_ln695_2_fu_615_p2;
        select_ln451_reg_739 <= select_ln451_fu_607_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln695_3_reg_693 <= add_ln695_3_fu_527_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1))) begin
        buf_0_V_addr_1_reg_702 <= zext_ln538_1_fu_533_p1;
        buf_1_V_addr_1_reg_707 <= zext_ln538_1_fu_533_p1;
        buf_2_V_addr_reg_712 <= zext_ln538_1_fu_533_p1;
        icmp_ln874_2_reg_717 <= icmp_ln874_2_fu_540_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd1))) begin
        cmp_i_i533_i_reg_681 <= cmp_i_i533_i_fu_509_p2;
        trunc_ln324_reg_685 <= trunc_ln324_fu_514_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        empty_41_reg_238_pp1_iter1_reg <= empty_41_reg_238;
        icmp_ln882_2_reg_689 <= icmp_ln882_2_fu_522_p2;
        icmp_ln882_2_reg_689_pp1_iter1_reg <= icmp_ln882_2_reg_689;
        p_load40_reg_698_pp1_iter1_reg <= p_load40_reg_698;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln874_2_reg_717_pp1_iter3_reg <= icmp_ln874_2_reg_717;
        icmp_ln874_2_reg_717_pp1_iter4_reg <= icmp_ln874_2_reg_717_pp1_iter3_reg;
        icmp_ln874_2_reg_717_pp1_iter5_reg <= icmp_ln874_2_reg_717_pp1_iter4_reg;
        icmp_ln882_2_reg_689_pp1_iter2_reg <= icmp_ln882_2_reg_689_pp1_iter1_reg;
        icmp_ln882_2_reg_689_pp1_iter3_reg <= icmp_ln882_2_reg_689_pp1_iter2_reg;
        icmp_ln882_2_reg_689_pp1_iter4_reg <= icmp_ln882_2_reg_689_pp1_iter3_reg;
        icmp_ln882_2_reg_689_pp1_iter5_reg <= icmp_ln882_2_reg_689_pp1_iter4_reg;
        src_buf1_0_V_reg_300_pp1_iter5_reg <= src_buf1_0_V_reg_300;
        src_buf2_0_V_reg_262_pp1_iter5_reg <= src_buf2_0_V_reg_262;
        src_buf3_0_V_reg_287_pp1_iter5_reg <= src_buf3_0_V_reg_287;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln882_reg_633 <= icmp_ln882_fu_396_p2;
        icmp_ln882_reg_633_pp0_iter1_reg <= icmp_ln882_reg_633;
        zext_ln538_reg_642_pp0_iter1_reg[12 : 0] <= zext_ln538_reg_642[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        op2_assign_reg_672 <= op2_assign_fu_415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln882_2_fu_522_p2 == 1'd1))) begin
        p_load40_reg_698 <= empty_36_fu_94;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op91_read_state8 == 1'b1)) | ((icmp_ln882_reg_633 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_385 <= img_buf_1_473_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter3_reg == 1'd1))) begin
        src_buf1_2_V_reg_721 <= src_buf1_2_V_fu_549_p5;
        src_buf2_2_V_reg_727 <= src_buf2_2_V_fu_561_p5;
        src_buf3_2_V_reg_733 <= src_buf3_2_V_fu_573_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln882_fu_396_p2 == 1'd1))) begin
        zext_ln538_reg_642[12 : 0] <= zext_ln538_fu_407_p1[12 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln882_fu_396_p2 == 1'd0)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_condition_pp1_exit_iter4_state11 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter4_state11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln882_2_fu_522_p2 == 1'd0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)) | ((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln882_2_reg_689 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_empty_41_phi_fu_242_p4 = add_ln695_3_reg_693;
    end else begin
        ap_phi_mux_empty_41_phi_fu_242_p4 = empty_41_reg_238;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_2_reg_689_pp1_iter5_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_1_phi_fu_278_p4 = src_buf2_0_V_reg_262_pp1_iter5_reg;
    end else begin
        ap_phi_mux_p_Val2_1_phi_fu_278_p4 = p_Val2_1_reg_274;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_2_reg_689_pp1_iter5_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_2_phi_fu_254_p4 = src_buf3_0_V_reg_287_pp1_iter5_reg;
    end else begin
        ap_phi_mux_p_Val2_2_phi_fu_254_p4 = p_Val2_2_reg_250;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (icmp_ln882_2_reg_689_pp1_iter5_reg == 1'd1))) begin
        ap_phi_mux_p_Val2_s_phi_fu_316_p4 = src_buf1_0_V_reg_300_pp1_iter5_reg;
    end else begin
        ap_phi_mux_p_Val2_s_phi_fu_316_p4 = p_Val2_s_reg_312;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1) & (trunc_ln324_reg_685 == 2'd0)) | ((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (p_load40_reg_698_pp1_iter1_reg == 2'd0) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)))) begin
        buf_0_V_address1 = zext_ln538_1_fu_533_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        buf_0_V_address1 = zext_ln538_fu_407_p1;
    end else begin
        buf_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        buf_0_V_ce0 = 1'b1;
    end else begin
        buf_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1) & (trunc_ln324_reg_685 == 2'd0)) | ((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (p_load40_reg_698_pp1_iter1_reg == 2'd0) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        buf_0_V_ce1 = 1'b1;
    end else begin
        buf_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1) & (trunc_ln324_reg_685 == 2'd0))) begin
        buf_0_V_d1 = reg_385;
    end else if ((((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (p_load40_reg_698_pp1_iter1_reg == 2'd0) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)))) begin
        buf_0_V_d1 = 8'd0;
    end else begin
        buf_0_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1) & (trunc_ln324_reg_685 == 2'd0)) | ((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (p_load40_reg_698_pp1_iter1_reg == 2'd0) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_396_p2 == 1'd1)))) begin
        buf_0_V_we1 = 1'b1;
    end else begin
        buf_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1) & (trunc_ln324_reg_685 == 2'd1)) | ((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (p_load40_reg_698_pp1_iter1_reg == 2'd1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)))) begin
        buf_1_V_address1 = zext_ln538_1_fu_533_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_1_V_address1 = zext_ln538_reg_642_pp0_iter1_reg;
    end else begin
        buf_1_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        buf_1_V_ce0 = 1'b1;
    end else begin
        buf_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1) & (trunc_ln324_reg_685 == 2'd1)) | ((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (p_load40_reg_698_pp1_iter1_reg == 2'd1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buf_1_V_ce1 = 1'b1;
    end else begin
        buf_1_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (p_load40_reg_698_pp1_iter1_reg == 2'd1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1))) begin
        buf_1_V_d1 = 8'd0;
    end else if ((((cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1) & (trunc_ln324_reg_685 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        buf_1_V_d1 = reg_385;
    end else begin
        buf_1_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1) & (trunc_ln324_reg_685 == 2'd1)) | ((cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (p_load40_reg_698_pp1_iter1_reg == 2'd1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln882_reg_633_pp0_iter1_reg == 1'd1)))) begin
        buf_1_V_we1 = 1'b1;
    end else begin
        buf_1_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        buf_2_V_ce0 = 1'b1;
    end else begin
        buf_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln324_reg_685 == 2'd1) & ~(trunc_ln324_reg_685 == 2'd0) & (cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)) | (~(p_load40_reg_698_pp1_iter1_reg == 2'd1) & ~(p_load40_reg_698_pp1_iter1_reg == 2'd0) & (cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)))) begin
        buf_2_V_ce1 = 1'b1;
    end else begin
        buf_2_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_420)) begin
        if ((1'b1 == ap_condition_679)) begin
            buf_2_V_d1 = reg_385;
        end else if ((1'b1 == ap_condition_675)) begin
            buf_2_V_d1 = 8'd0;
        end else begin
            buf_2_V_d1 = 'bx;
        end
    end else begin
        buf_2_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln324_reg_685 == 2'd1) & ~(trunc_ln324_reg_685 == 2'd0) & (cmp_i_i533_i_reg_681 == 1'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)) | (~(p_load40_reg_698_pp1_iter1_reg == 2'd1) & ~(p_load40_reg_698_pp1_iter1_reg == 2'd0) & (cmp_i_i533_i_reg_681 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1)))) begin
        buf_2_V_we1 = 1'b1;
    end else begin
        buf_2_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)))) begin
        grp_xFGradientX3x3_0_0_s_fu_342_ap_ce = 1'b1;
    end else begin
        grp_xFGradientX3x3_0_0_s_fu_342_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)))) begin
        grp_xFGradientY3x3_0_0_s_fu_359_ap_ce = 1'b1;
    end else begin
        grp_xFGradientY3x3_0_0_s_fu_359_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001_ignoreCallOp131) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce = 1'b1;
    end else begin
        grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp_i_i533_i_reg_681 == 1'd1) & (icmp_ln882_2_reg_689 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln882_reg_633 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_buf_1_473_blk_n = img_buf_1_473_empty_n;
    end else begin
        img_buf_1_473_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_predicate_op91_read_state8 == 1'b1)) | ((icmp_ln882_reg_633 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        img_buf_1_473_read = 1'b1;
    end else begin
        img_buf_1_473_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        img_buf_1a_474_blk_n = img_buf_1a_474_full_n;
    end else begin
        img_buf_1a_474_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
        img_buf_1a_474_din = grp_xFGradientX3x3_0_0_s_fu_342_ap_return;
    end else if (((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        img_buf_1a_474_din = grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_0;
    end else begin
        img_buf_1a_474_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | (~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)))) begin
        img_buf_1a_474_write = 1'b1;
    end else begin
        img_buf_1a_474_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0)))) begin
        img_buf_1b_475_blk_n = img_buf_1b_475_full_n;
    end else begin
        img_buf_1b_475_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
        img_buf_1b_475_din = grp_xFGradientY3x3_0_0_s_fu_359_ap_return;
    end else if (((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_01001))) begin
        img_buf_1b_475_din = grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_1;
    end else begin
        img_buf_1b_475_din = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | (~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15)))) begin
        img_buf_1b_475_write = 1'b1;
    end else begin
        img_buf_1b_475_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_396_p2 == 1'd0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln882_fu_396_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln882_1_fu_425_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) & ~((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter6 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if ((~((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln695_1_fu_595_p2 = (empty_40_reg_226 + 13'd1);

assign add_ln695_2_fu_615_p2 = (empty_39_reg_214 + 13'd1);

assign add_ln695_3_fu_527_p2 = (ap_phi_mux_empty_41_phi_fu_242_p4 + 13'd1);

assign add_ln695_fu_401_p2 = (empty_reg_203 + 13'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln882_reg_633 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (img_buf_1_473_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln882_reg_633 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (img_buf_1_473_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = (((ap_enable_reg_pp1_iter6 == 1'b1) & (((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1b_475_full_n == 1'b0)) | ((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1a_474_full_n == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (img_buf_1_473_empty_n == 1'b0) & (ap_predicate_op91_read_state8 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((ap_enable_reg_pp1_iter6 == 1'b1) & (((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1b_475_full_n == 1'b0)) | ((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1a_474_full_n == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (img_buf_1_473_empty_n == 1'b0) & (ap_predicate_op91_read_state8 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_11001_ignoreCallOp131 = (((ap_enable_reg_pp1_iter6 == 1'b1) & (((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1b_475_full_n == 1'b0)) | ((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1a_474_full_n == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (img_buf_1_473_empty_n == 1'b0) & (ap_predicate_op91_read_state8 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((ap_enable_reg_pp1_iter6 == 1'b1) & (((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1b_475_full_n == 1'b0)) | ((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1a_474_full_n == 1'b0)))) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (img_buf_1_473_empty_n == 1'b0) & (ap_predicate_op91_read_state8 == 1'b1)));
end

assign ap_block_state10_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage0_iter3_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter4_ignore_call9 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp1_stage0_iter5_ignore_call9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp1_stage0_iter6 = (((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1b_475_full_n == 1'b0)) | ((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1a_474_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state13_pp1_stage0_iter6_ignore_call9 = (((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1b_475_full_n == 1'b0)) | ((icmp_ln874_2_reg_717_pp1_iter5_reg == 1'd0) & (img_buf_1a_474_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state15 = ((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_ignore_call0 = ((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state15_ignore_call1 = ((img_buf_1b_475_full_n == 1'b0) | (img_buf_1a_474_full_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln882_reg_633 == 1'd1) & (img_buf_1_473_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0_ignore_call9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp1_stage0_iter1 = ((img_buf_1_473_empty_n == 1'b0) & (ap_predicate_op91_read_state8 == 1'b1));
end

always @ (*) begin
    ap_block_state8_pp1_stage0_iter1_ignore_call9 = ((img_buf_1_473_empty_n == 1'b0) & (ap_predicate_op91_read_state8 == 1'b1));
end

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter2_ignore_call9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_420 = ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln882_2_reg_689_pp1_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_condition_675 = (~(p_load40_reg_698_pp1_iter1_reg == 2'd1) & ~(p_load40_reg_698_pp1_iter1_reg == 2'd0) & (cmp_i_i533_i_reg_681 == 1'd0));
end

always @ (*) begin
    ap_condition_679 = (~(trunc_ln324_reg_685 == 2'd1) & ~(trunc_ln324_reg_685 == 2'd0) & (cmp_i_i533_i_reg_681 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_mux_empty_40_phi_fu_230_p4 = empty_40_reg_226;

always @ (*) begin
    ap_predicate_op91_read_state8 = ((cmp_i_i533_i_reg_681 == 1'd1) & (icmp_ln882_2_reg_689 == 1'd1));
end

assign buf_2_V_address1 = zext_ln538_1_fu_533_p1;

assign cmp_i_i533_i_fu_509_p2 = ((zext_ln882_1_fu_430_p1 < img_height) ? 1'b1 : 1'b0);

assign icmp_ln874_1_fu_601_p2 = ((add_ln695_1_fu_595_p2 == 13'd3) ? 1'b1 : 1'b0);

assign icmp_ln874_2_fu_540_p2 = ((empty_41_reg_238_pp1_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_464_p2 = ((empty_40_reg_226 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln882_1_fu_425_p2 = ((zext_ln882_2_fu_421_p1 < op2_assign_reg_672) ? 1'b1 : 1'b0);

assign icmp_ln882_2_fu_522_p2 = ((zext_ln882_3_fu_518_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln882_fu_396_p2 = ((zext_ln882_fu_392_p1 < img_width) ? 1'b1 : 1'b0);

assign img_height_cast_fu_412_p1 = img_height;

assign op2_assign_fu_415_p2 = (img_height_cast_fu_412_p1 + 17'd1);

assign select_ln373_1_fu_478_p3 = ((icmp_ln874_fu_464_p2[0:0] === 1'b1) ? 2'd0 : empty_37_fu_98);

assign select_ln373_2_fu_486_p3 = ((icmp_ln874_fu_464_p2[0:0] === 1'b1) ? 2'd2 : empty_38_fu_102);

assign select_ln373_fu_470_p3 = ((icmp_ln874_fu_464_p2[0:0] === 1'b1) ? 2'd1 : empty_36_fu_94);

assign select_ln451_fu_607_p3 = ((icmp_ln874_1_fu_601_p2[0:0] === 1'b1) ? 13'd0 : add_ln695_1_fu_595_p2);

assign trunc_ln324_fu_514_p1 = empty_40_reg_226[1:0];

assign zext_ln538_1_fu_533_p1 = empty_41_reg_238_pp1_iter1_reg;

assign zext_ln538_fu_407_p1 = empty_reg_203;

assign zext_ln882_1_fu_430_p1 = empty_39_reg_214;

assign zext_ln882_2_fu_421_p1 = empty_39_reg_214;

assign zext_ln882_3_fu_518_p1 = ap_phi_mux_empty_41_phi_fu_242_p4;

assign zext_ln882_fu_392_p1 = empty_reg_203;

always @ (posedge ap_clk) begin
    zext_ln538_reg_642[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln538_reg_642_pp0_iter1_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
end

endmodule //hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s
