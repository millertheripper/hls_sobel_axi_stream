-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_sobel_axi_stream_top_xFGradientY3x3_0_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    t0 : IN STD_LOGIC_VECTOR (7 downto 0);
    t1 : IN STD_LOGIC_VECTOR (7 downto 0);
    t2 : IN STD_LOGIC_VECTOR (7 downto 0);
    b0 : IN STD_LOGIC_VECTOR (7 downto 0);
    b1 : IN STD_LOGIC_VECTOR (7 downto 0);
    b2 : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of hls_sobel_axi_stream_top_xFGradientY3x3_0_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal out_pix_fu_146_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_reg_204 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal tmp_reg_209 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_reg_215 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal M00_fu_70_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal M01_fu_82_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_fu_94_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_1_fu_98_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_fu_102_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_2_fu_112_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_3_fu_116_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_1_fu_120_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln108_fu_90_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln107_fu_78_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal out_pix_3_fu_130_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln109_fu_108_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln114_fu_136_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal out_pix_4_fu_140_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln110_fu_126_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln120_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_fu_173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln120_fu_183_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln302_fu_170_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln120_1_fu_196_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return_int_reg : STD_LOGIC_VECTOR (7 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln120_1_fu_196_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_const_logic_1))) then
                out_pix_reg_204 <= out_pix_fu_146_p2;
                tmp_1_reg_215 <= out_pix_fu_146_p2(10 downto 8);
                tmp_reg_209 <= out_pix_fu_146_p2(10 downto 10);
            end if;
        end if;
    end process;
    M00_fu_70_p3 <= (t1 & ap_const_lv1_0);
    M01_fu_82_p3 <= (b1 & ap_const_lv1_0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln120_1_fu_196_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln120_1_fu_196_p3;
        end if; 
    end process;

    icmp_ln122_fu_173_p2 <= "1" when (signed(tmp_1_reg_215) > signed(ap_const_lv3_0)) else "0";
    or_ln120_fu_191_p2 <= (tmp_reg_209 or icmp_ln122_fu_173_p2);
    out_pix_3_fu_130_p2 <= std_logic_vector(unsigned(zext_ln108_fu_90_p1) - unsigned(zext_ln107_fu_78_p1));
    out_pix_4_fu_140_p2 <= std_logic_vector(unsigned(zext_ln109_fu_108_p1) + unsigned(sext_ln114_fu_136_p1));
    out_pix_fu_146_p2 <= std_logic_vector(unsigned(out_pix_4_fu_140_p2) - unsigned(zext_ln110_fu_126_p1));
    ret_V_1_fu_120_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_112_p1) + unsigned(zext_ln215_3_fu_116_p1));
    ret_V_fu_102_p2 <= std_logic_vector(unsigned(zext_ln215_fu_94_p1) + unsigned(zext_ln215_1_fu_98_p1));
    select_ln120_1_fu_196_p3 <= 
        select_ln120_fu_183_p3 when (or_ln120_fu_191_p2(0) = '1') else 
        trunc_ln302_fu_170_p1;
    select_ln120_fu_183_p3 <= 
        ap_const_lv8_FF when (xor_ln120_fu_178_p2(0) = '1') else 
        ap_const_lv8_0;
        sext_ln114_fu_136_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(out_pix_3_fu_130_p2),11));

    trunc_ln302_fu_170_p1 <= out_pix_reg_204(8 - 1 downto 0);
    xor_ln120_fu_178_p2 <= (tmp_reg_209 xor ap_const_lv1_1);
    zext_ln107_fu_78_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M00_fu_70_p3),10));
    zext_ln108_fu_90_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(M01_fu_82_p3),10));
    zext_ln109_fu_108_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_102_p2),11));
    zext_ln110_fu_126_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_1_fu_120_p2),11));
    zext_ln215_1_fu_98_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b2),9));
    zext_ln215_2_fu_112_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t0),9));
    zext_ln215_3_fu_116_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t2),9));
    zext_ln215_fu_94_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b0),9));
end behav;
