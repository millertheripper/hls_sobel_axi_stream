-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    img_buf_1_473_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    img_buf_1_473_empty_n : IN STD_LOGIC;
    img_buf_1_473_read : OUT STD_LOGIC;
    img_buf_1a_474_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_buf_1a_474_full_n : IN STD_LOGIC;
    img_buf_1a_474_write : OUT STD_LOGIC;
    img_buf_1b_475_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    img_buf_1b_475_full_n : IN STD_LOGIC;
    img_buf_1b_475_write : OUT STD_LOGIC;
    img_height : IN STD_LOGIC_VECTOR (15 downto 0);
    img_width : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_2 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv13_3 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000011";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal img_buf_1_473_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln882_reg_633 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln882_2_reg_689 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i533_i_reg_681 : STD_LOGIC_VECTOR (0 downto 0);
    signal img_buf_1a_474_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal icmp_ln874_2_reg_717 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_717_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal img_buf_1b_475_blk_n : STD_LOGIC;
    signal empty_reg_203 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_41_reg_238 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_41_reg_238_pp1_iter1_reg : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_state7_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op91_read_state8 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal p_Val2_2_reg_250 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_262 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_0_V_reg_262_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_1_reg_274 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_287 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_0_V_reg_287_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_300 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_0_V_reg_300_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Val2_s_reg_312 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_385 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln882_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_reg_633_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_fu_401_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln538_fu_407_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln538_reg_642 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln538_reg_642_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal op2_assign_fu_415_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal op2_assign_reg_672 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln882_1_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal cmp_i_i533_i_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln324_fu_514_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln324_reg_685 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln882_2_fu_522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_2_reg_689_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_2_reg_689_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_2_reg_689_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_2_reg_689_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln882_2_reg_689_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln695_3_fu_527_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln695_3_reg_693 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal p_load40_reg_698 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_load40_reg_698_pp1_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal buf_0_V_addr_1_reg_702 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_addr_1_reg_707 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_addr_reg_712 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln874_2_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_717_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln874_2_reg_717_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf1_2_V_fu_549_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf1_2_V_reg_721 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal src_buf2_2_V_fu_561_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf2_2_V_reg_727 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_2_V_fu_573_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf3_2_V_reg_733 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln451_fu_607_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln451_reg_739 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal add_ln695_2_fu_615_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln695_2_reg_744 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_condition_pp1_exit_iter4_state11 : STD_LOGIC;
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce : STD_LOGIC;
    signal ap_block_state7_pp1_stage0_iter0_ignore_call9 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter1_ignore_call9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter2_ignore_call9 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter3_ignore_call9 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter4_ignore_call9 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter5_ignore_call9 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter6_ignore_call9 : BOOLEAN;
    signal ap_block_pp1_stage0_11001_ignoreCallOp131 : BOOLEAN;
    signal grp_xFGradientX3x3_0_0_s_fu_342_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFGradientX3x3_0_0_s_fu_342_ap_ce : STD_LOGIC;
    signal ap_block_state15 : BOOLEAN;
    signal ap_block_state15_ignore_call0 : BOOLEAN;
    signal grp_xFGradientY3x3_0_0_s_fu_359_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xFGradientY3x3_0_0_s_fu_359_ap_ce : STD_LOGIC;
    signal ap_block_state15_ignore_call1 : BOOLEAN;
    signal empty_39_reg_214 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_empty_40_phi_fu_230_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_40_reg_226 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_empty_41_phi_fu_242_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_phi_mux_p_Val2_2_phi_fu_254_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_Val2_1_phi_fu_278_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_Val2_s_phi_fu_316_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln538_1_fu_533_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_36_fu_94 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln373_fu_470_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_37_fu_98 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln373_1_fu_478_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_38_fu_102 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln373_2_fu_486_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal zext_ln882_fu_392_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal img_height_cast_fu_412_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln882_2_fu_421_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln874_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln882_1_fu_430_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln882_3_fu_518_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln695_1_fu_595_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln874_1_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_675 : BOOLEAN;
    signal ap_condition_679 : BOOLEAN;
    signal ap_condition_420 : BOOLEAN;

    component hls_sobel_axi_stream_top_xFSobel3x3_1_1_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        p_read2 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read5 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read6 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read7 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read8 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read9 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read10 : IN STD_LOGIC_VECTOR (7 downto 0);
        p_read11 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component hls_sobel_axi_stream_top_xFGradientX3x3_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        t0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t2 : IN STD_LOGIC_VECTOR (7 downto 0);
        m0 : IN STD_LOGIC_VECTOR (7 downto 0);
        m2 : IN STD_LOGIC_VECTOR (7 downto 0);
        b0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component hls_sobel_axi_stream_top_xFGradientY3x3_0_0_s IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        t0 : IN STD_LOGIC_VECTOR (7 downto 0);
        t1 : IN STD_LOGIC_VECTOR (7 downto 0);
        t2 : IN STD_LOGIC_VECTOR (7 downto 0);
        b0 : IN STD_LOGIC_VECTOR (7 downto 0);
        b1 : IN STD_LOGIC_VECTOR (7 downto 0);
        b2 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_ce : IN STD_LOGIC );
    end component;


    component hls_sobel_axi_stream_top_mux_32_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_addr_1_reg_702,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_addr_1_reg_707,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component hls_sobel_axi_stream_top_xFSobelFilter3x3_0_0_1080_1920_1_0_0_1_1_1_1920_false_s_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 1920,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_addr_reg_712,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    grp_xFSobel3x3_1_1_0_0_s_fu_325 : component hls_sobel_axi_stream_top_xFSobel3x3_1_1_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        p_read2 => ap_phi_mux_p_Val2_s_phi_fu_316_p4,
        p_read5 => src_buf1_0_V_reg_300,
        p_read6 => src_buf1_2_V_reg_721,
        p_read7 => ap_phi_mux_p_Val2_1_phi_fu_278_p4,
        p_read8 => src_buf2_2_V_reg_727,
        p_read9 => ap_phi_mux_p_Val2_2_phi_fu_254_p4,
        p_read10 => src_buf3_0_V_reg_287,
        p_read11 => src_buf3_2_V_reg_733,
        ap_return_0 => grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_0,
        ap_return_1 => grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_1,
        ap_ce => grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce);

    grp_xFGradientX3x3_0_0_s_fu_342 : component hls_sobel_axi_stream_top_xFGradientX3x3_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        t0 => p_Val2_s_reg_312,
        t2 => ap_const_lv8_0,
        m0 => p_Val2_1_reg_274,
        m2 => ap_const_lv8_0,
        b0 => p_Val2_2_reg_250,
        b2 => ap_const_lv8_0,
        ap_return => grp_xFGradientX3x3_0_0_s_fu_342_ap_return,
        ap_ce => grp_xFGradientX3x3_0_0_s_fu_342_ap_ce);

    grp_xFGradientY3x3_0_0_s_fu_359 : component hls_sobel_axi_stream_top_xFGradientY3x3_0_0_s
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        t0 => p_Val2_s_reg_312,
        t1 => src_buf1_0_V_reg_300,
        t2 => ap_const_lv8_0,
        b0 => p_Val2_2_reg_250,
        b1 => src_buf3_0_V_reg_287,
        b2 => ap_const_lv8_0,
        ap_return => grp_xFGradientY3x3_0_0_s_fu_359_ap_return,
        ap_ce => grp_xFGradientY3x3_0_0_s_fu_359_ap_ce);

    mux_32_8_1_1_U56 : component hls_sobel_axi_stream_top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_38_fu_102,
        dout => src_buf1_2_V_fu_549_p5);

    mux_32_8_1_1_U57 : component hls_sobel_axi_stream_top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_37_fu_98,
        dout => src_buf2_2_V_fu_561_p5);

    mux_32_8_1_1_U58 : component hls_sobel_axi_stream_top_mux_32_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => empty_36_fu_94,
        dout => src_buf3_2_V_fu_573_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter4_state11)) then 
                        ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter3;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                    ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_36_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then
                if ((not((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_0)))) then 
                    empty_36_fu_94 <= select_ln373_fu_470_p3;
                elsif ((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_2)) then 
                    empty_36_fu_94 <= ap_const_lv2_2;
                elsif ((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_0)) then 
                    empty_36_fu_94 <= ap_const_lv2_0;
                end if;
            end if; 
        end if;
    end process;

    empty_37_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then
                if ((not((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_0)))) then 
                    empty_37_fu_98 <= select_ln373_1_fu_478_p3;
                elsif ((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_2)) then 
                    empty_37_fu_98 <= ap_const_lv2_1;
                elsif ((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_0)) then 
                    empty_37_fu_98 <= ap_const_lv2_2;
                end if;
            end if; 
        end if;
    end process;

    empty_38_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then
                if ((not((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_2)) and not((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_0)))) then 
                    empty_38_fu_102 <= select_ln373_2_fu_486_p3;
                elsif ((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_2)) then 
                    empty_38_fu_102 <= ap_const_lv2_0;
                elsif ((ap_phi_mux_empty_40_phi_fu_230_p4 = ap_const_lv13_0)) then 
                    empty_38_fu_102 <= ap_const_lv2_1;
                end if;
            end if; 
        end if;
    end process;

    empty_39_reg_214_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                empty_39_reg_214 <= add_ln695_2_reg_744;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                empty_39_reg_214 <= ap_const_lv13_1;
            end if; 
        end if;
    end process;

    empty_40_reg_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
                empty_40_reg_226 <= select_ln451_reg_739;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                empty_40_reg_226 <= ap_const_lv13_2;
            end if; 
        end if;
    end process;

    empty_41_reg_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln882_2_reg_689 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                empty_41_reg_238 <= add_ln695_3_reg_693;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                empty_41_reg_238 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    empty_reg_203_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_fu_396_p2 = ap_const_lv1_1))) then 
                empty_reg_203 <= add_ln695_fu_401_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_reg_203 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    p_Val2_1_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln882_2_reg_689_pp1_iter5_reg = ap_const_lv1_1))) then 
                p_Val2_1_reg_274 <= src_buf2_0_V_reg_262_pp1_iter5_reg;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                p_Val2_1_reg_274 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    p_Val2_2_reg_250_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln882_2_reg_689_pp1_iter5_reg = ap_const_lv1_1))) then 
                p_Val2_2_reg_250 <= src_buf3_0_V_reg_287_pp1_iter5_reg;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                p_Val2_2_reg_250 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    p_Val2_s_reg_312_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln882_2_reg_689_pp1_iter5_reg = ap_const_lv1_1))) then 
                p_Val2_s_reg_312 <= src_buf1_0_V_reg_300_pp1_iter5_reg;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                p_Val2_s_reg_312 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf1_0_V_reg_300_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter4_reg = ap_const_lv1_1))) then 
                src_buf1_0_V_reg_300 <= src_buf1_2_V_reg_721;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                src_buf1_0_V_reg_300 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf2_0_V_reg_262_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter4_reg = ap_const_lv1_1))) then 
                src_buf2_0_V_reg_262 <= src_buf2_2_V_reg_727;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                src_buf2_0_V_reg_262 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    src_buf3_0_V_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter5 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter4_reg = ap_const_lv1_1))) then 
                src_buf3_0_V_reg_287 <= src_buf3_2_V_reg_733;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then 
                src_buf3_0_V_reg_287 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                add_ln695_2_reg_744 <= add_ln695_2_fu_615_p2;
                select_ln451_reg_739 <= select_ln451_fu_607_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                add_ln695_3_reg_693 <= add_ln695_3_fu_527_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1))) then
                buf_0_V_addr_1_reg_702 <= zext_ln538_1_fu_533_p1(11 - 1 downto 0);
                buf_1_V_addr_1_reg_707 <= zext_ln538_1_fu_533_p1(11 - 1 downto 0);
                buf_2_V_addr_reg_712 <= zext_ln538_1_fu_533_p1(11 - 1 downto 0);
                icmp_ln874_2_reg_717 <= icmp_ln874_2_fu_540_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_1))) then
                cmp_i_i533_i_reg_681 <= cmp_i_i533_i_fu_509_p2;
                trunc_ln324_reg_685 <= trunc_ln324_fu_514_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                empty_41_reg_238_pp1_iter1_reg <= empty_41_reg_238;
                icmp_ln882_2_reg_689 <= icmp_ln882_2_fu_522_p2;
                icmp_ln882_2_reg_689_pp1_iter1_reg <= icmp_ln882_2_reg_689;
                p_load40_reg_698_pp1_iter1_reg <= p_load40_reg_698;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln874_2_reg_717_pp1_iter3_reg <= icmp_ln874_2_reg_717;
                icmp_ln874_2_reg_717_pp1_iter4_reg <= icmp_ln874_2_reg_717_pp1_iter3_reg;
                icmp_ln874_2_reg_717_pp1_iter5_reg <= icmp_ln874_2_reg_717_pp1_iter4_reg;
                icmp_ln882_2_reg_689_pp1_iter2_reg <= icmp_ln882_2_reg_689_pp1_iter1_reg;
                icmp_ln882_2_reg_689_pp1_iter3_reg <= icmp_ln882_2_reg_689_pp1_iter2_reg;
                icmp_ln882_2_reg_689_pp1_iter4_reg <= icmp_ln882_2_reg_689_pp1_iter3_reg;
                icmp_ln882_2_reg_689_pp1_iter5_reg <= icmp_ln882_2_reg_689_pp1_iter4_reg;
                src_buf1_0_V_reg_300_pp1_iter5_reg <= src_buf1_0_V_reg_300;
                src_buf2_0_V_reg_262_pp1_iter5_reg <= src_buf2_0_V_reg_262;
                src_buf3_0_V_reg_287_pp1_iter5_reg <= src_buf3_0_V_reg_287;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln882_reg_633 <= icmp_ln882_fu_396_p2;
                icmp_ln882_reg_633_pp0_iter1_reg <= icmp_ln882_reg_633;
                    zext_ln538_reg_642_pp0_iter1_reg(12 downto 0) <= zext_ln538_reg_642(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                op2_assign_reg_672 <= op2_assign_fu_415_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln882_2_fu_522_p2 = ap_const_lv1_1))) then
                p_load40_reg_698 <= empty_36_fu_94;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)) or ((icmp_ln882_reg_633 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_385 <= img_buf_1_473_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter3_reg = ap_const_lv1_1))) then
                src_buf1_2_V_reg_721 <= src_buf1_2_V_fu_549_p5;
                src_buf2_2_V_reg_727 <= src_buf2_2_V_fu_561_p5;
                src_buf3_2_V_reg_733 <= src_buf3_2_V_fu_573_p5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln882_fu_396_p2 = ap_const_lv1_1))) then
                    zext_ln538_reg_642(12 downto 0) <= zext_ln538_fu_407_p1(12 downto 0);
            end if;
        end if;
    end process;
    zext_ln538_reg_642(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    zext_ln538_reg_642_pp0_iter1_reg(63 downto 13) <= "000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter6, ap_CS_fsm_state15, icmp_ln882_fu_396_p2, ap_enable_reg_pp0_iter0, icmp_ln882_1_fu_425_p2, ap_CS_fsm_state6, ap_enable_reg_pp1_iter4, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter5)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_fu_396_p2 = ap_const_lv1_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_fu_396_p2 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if ((not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln695_1_fu_595_p2 <= std_logic_vector(unsigned(empty_40_reg_226) + unsigned(ap_const_lv13_1));
    add_ln695_2_fu_615_p2 <= std_logic_vector(unsigned(empty_39_reg_214) + unsigned(ap_const_lv13_1));
    add_ln695_3_fu_527_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_41_phi_fu_242_p4) + unsigned(ap_const_lv13_1));
    add_ln695_fu_401_p2 <= std_logic_vector(unsigned(empty_reg_203) + unsigned(ap_const_lv13_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state14 <= ap_CS_fsm(5);
    ap_CS_fsm_state15 <= ap_CS_fsm(6);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(img_buf_1_473_empty_n, ap_enable_reg_pp0_iter1, icmp_ln882_reg_633)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln882_reg_633 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (img_buf_1_473_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(img_buf_1_473_empty_n, ap_enable_reg_pp0_iter1, icmp_ln882_reg_633)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln882_reg_633 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (img_buf_1_473_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(img_buf_1_473_empty_n, img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_predicate_op91_read_state8)
    begin
                ap_block_pp1_stage0_01001 <= (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1b_475_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1a_474_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (img_buf_1_473_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(img_buf_1_473_empty_n, img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_predicate_op91_read_state8)
    begin
                ap_block_pp1_stage0_11001 <= (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1b_475_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1a_474_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (img_buf_1_473_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_11001_ignoreCallOp131_assign_proc : process(img_buf_1_473_empty_n, img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_predicate_op91_read_state8)
    begin
                ap_block_pp1_stage0_11001_ignoreCallOp131 <= (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1b_475_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1a_474_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (img_buf_1_473_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(img_buf_1_473_empty_n, img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_predicate_op91_read_state8)
    begin
                ap_block_pp1_stage0_subdone <= (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1b_475_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1a_474_full_n = ap_const_logic_0)))) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (img_buf_1_473_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)));
    end process;

        ap_block_state10_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp1_stage0_iter3_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter4_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter5_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_pp1_stage0_iter6_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n, icmp_ln874_2_reg_717_pp1_iter5_reg)
    begin
                ap_block_state13_pp1_stage0_iter6 <= (((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1b_475_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1a_474_full_n = ap_const_logic_0)));
    end process;


    ap_block_state13_pp1_stage0_iter6_ignore_call9_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n, icmp_ln874_2_reg_717_pp1_iter5_reg)
    begin
                ap_block_state13_pp1_stage0_iter6_ignore_call9 <= (((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1b_475_full_n = ap_const_logic_0)) or ((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (img_buf_1a_474_full_n = ap_const_logic_0)));
    end process;


    ap_block_state15_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n)
    begin
                ap_block_state15 <= ((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0));
    end process;


    ap_block_state15_ignore_call0_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n)
    begin
                ap_block_state15_ignore_call0 <= ((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0));
    end process;


    ap_block_state15_ignore_call1_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n)
    begin
                ap_block_state15_ignore_call1 <= ((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(img_buf_1_473_empty_n, icmp_ln882_reg_633)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((icmp_ln882_reg_633 = ap_const_lv1_1) and (img_buf_1_473_empty_n = ap_const_logic_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter0_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp1_stage0_iter1_assign_proc : process(img_buf_1_473_empty_n, ap_predicate_op91_read_state8)
    begin
                ap_block_state8_pp1_stage0_iter1 <= ((img_buf_1_473_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1));
    end process;


    ap_block_state8_pp1_stage0_iter1_ignore_call9_assign_proc : process(img_buf_1_473_empty_n, ap_predicate_op91_read_state8)
    begin
                ap_block_state8_pp1_stage0_iter1_ignore_call9 <= ((img_buf_1_473_empty_n = ap_const_logic_0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1));
    end process;

        ap_block_state9_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter2_ignore_call9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_420_assign_proc : process(ap_block_pp1_stage0, icmp_ln882_2_reg_689_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
                ap_condition_420 <= ((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1));
    end process;


    ap_condition_675_assign_proc : process(cmp_i_i533_i_reg_681, p_load40_reg_698_pp1_iter1_reg)
    begin
                ap_condition_675 <= (not((p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_1)) and not((p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_0)) and (cmp_i_i533_i_reg_681 = ap_const_lv1_0));
    end process;


    ap_condition_679_assign_proc : process(cmp_i_i533_i_reg_681, trunc_ln324_reg_685)
    begin
                ap_condition_679 <= (not((trunc_ln324_reg_685 = ap_const_lv2_1)) and not((trunc_ln324_reg_685 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_681 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln882_fu_396_p2)
    begin
        if ((icmp_ln882_fu_396_p2 = ap_const_lv1_0)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter4_state11_assign_proc : process(ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            ap_condition_pp1_exit_iter4_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter4_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln882_2_fu_522_p2, ap_block_pp1_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln882_2_fu_522_p2 = ap_const_lv1_0))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln882_1_fu_425_p2, ap_CS_fsm_state6)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter5)
    begin
        if (((ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_mux_empty_40_phi_fu_230_p4 <= empty_40_reg_226;

    ap_phi_mux_empty_41_phi_fu_242_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_2_reg_689, empty_41_reg_238, add_ln695_3_reg_693)
    begin
        if (((icmp_ln882_2_reg_689 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_empty_41_phi_fu_242_p4 <= add_ln695_3_reg_693;
        else 
            ap_phi_mux_empty_41_phi_fu_242_p4 <= empty_41_reg_238;
        end if; 
    end process;


    ap_phi_mux_p_Val2_1_phi_fu_278_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, src_buf2_0_V_reg_262_pp1_iter5_reg, p_Val2_1_reg_274, icmp_ln882_2_reg_689_pp1_iter5_reg)
    begin
        if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln882_2_reg_689_pp1_iter5_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_Val2_1_phi_fu_278_p4 <= src_buf2_0_V_reg_262_pp1_iter5_reg;
        else 
            ap_phi_mux_p_Val2_1_phi_fu_278_p4 <= p_Val2_1_reg_274;
        end if; 
    end process;


    ap_phi_mux_p_Val2_2_phi_fu_254_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, p_Val2_2_reg_250, src_buf3_0_V_reg_287_pp1_iter5_reg, icmp_ln882_2_reg_689_pp1_iter5_reg)
    begin
        if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln882_2_reg_689_pp1_iter5_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_Val2_2_phi_fu_254_p4 <= src_buf3_0_V_reg_287_pp1_iter5_reg;
        else 
            ap_phi_mux_p_Val2_2_phi_fu_254_p4 <= p_Val2_2_reg_250;
        end if; 
    end process;


    ap_phi_mux_p_Val2_s_phi_fu_316_p4_assign_proc : process(ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, src_buf1_0_V_reg_300_pp1_iter5_reg, p_Val2_s_reg_312, icmp_ln882_2_reg_689_pp1_iter5_reg)
    begin
        if (((ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln882_2_reg_689_pp1_iter5_reg = ap_const_lv1_1))) then 
            ap_phi_mux_p_Val2_s_phi_fu_316_p4 <= src_buf1_0_V_reg_300_pp1_iter5_reg;
        else 
            ap_phi_mux_p_Val2_s_phi_fu_316_p4 <= p_Val2_s_reg_312;
        end if; 
    end process;


    ap_predicate_op91_read_state8_assign_proc : process(icmp_ln882_2_reg_689, cmp_i_i533_i_reg_681)
    begin
                ap_predicate_op91_read_state8 <= ((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (icmp_ln882_2_reg_689 = ap_const_lv1_1));
    end process;


    ap_ready_assign_proc : process(icmp_ln882_1_fu_425_p2, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln882_1_fu_425_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, cmp_i_i533_i_reg_681, ap_enable_reg_pp0_iter0, zext_ln538_fu_407_p1, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp1_iter2, zext_ln538_1_fu_533_p1)
    begin
        if ((((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln324_reg_685 = ap_const_lv2_0)) or ((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_0) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)))) then 
            buf_0_V_address1 <= zext_ln538_1_fu_533_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            buf_0_V_address1 <= zext_ln538_fu_407_p1(11 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, cmp_i_i533_i_reg_681, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln324_reg_685 = ap_const_lv2_0)) or ((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_0) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, cmp_i_i533_i_reg_681, reg_385, ap_enable_reg_pp0_iter0, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln324_reg_685 = ap_const_lv2_0))) then 
            buf_0_V_d1 <= reg_385;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_0) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)))) then 
            buf_0_V_d1 <= ap_const_lv8_0;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, cmp_i_i533_i_reg_681, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, icmp_ln882_fu_396_p2, ap_enable_reg_pp0_iter0, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln324_reg_685 = ap_const_lv2_0)) or ((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_0) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln882_fu_396_p2 = ap_const_lv1_1)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_address1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, cmp_i_i533_i_reg_681, zext_ln538_reg_642_pp0_iter1_reg, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, zext_ln538_1_fu_533_p1)
    begin
        if ((((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln324_reg_685 = ap_const_lv2_1)) or ((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)))) then 
            buf_1_V_address1 <= zext_ln538_1_fu_533_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            buf_1_V_address1 <= zext_ln538_reg_642_pp0_iter1_reg(11 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(cmp_i_i533_i_reg_681, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln324_reg_685 = ap_const_lv2_1)) or ((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(ap_block_pp0_stage0, ap_block_pp1_stage0, cmp_i_i533_i_reg_681, reg_385, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if (((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1))) then 
            buf_1_V_d1 <= ap_const_lv8_0;
        elsif ((((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln324_reg_685 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            buf_1_V_d1 <= reg_385;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(cmp_i_i533_i_reg_681, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, icmp_ln882_reg_633_pp0_iter1_reg, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1) and (trunc_ln324_reg_685 = ap_const_lv2_1)) or ((cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln882_reg_633_pp0_iter1_reg = ap_const_lv1_1)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_address1 <= zext_ln538_1_fu_533_p1(11 - 1 downto 0);

    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(cmp_i_i533_i_reg_681, ap_block_pp1_stage0_11001, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((not((trunc_ln324_reg_685 = ap_const_lv2_1)) and not((trunc_ln324_reg_685 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)) or (not((p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_1)) and not((p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_0)) and (cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(reg_385, ap_condition_675, ap_condition_679, ap_condition_420)
    begin
        if ((ap_const_boolean_1 = ap_condition_420)) then
            if ((ap_const_boolean_1 = ap_condition_679)) then 
                buf_2_V_d1 <= reg_385;
            elsif ((ap_const_boolean_1 = ap_condition_675)) then 
                buf_2_V_d1 <= ap_const_lv8_0;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(cmp_i_i533_i_reg_681, ap_block_pp1_stage0_11001, trunc_ln324_reg_685, icmp_ln882_2_reg_689_pp1_iter1_reg, p_load40_reg_698_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((not((trunc_ln324_reg_685 = ap_const_lv2_1)) and not((trunc_ln324_reg_685 = ap_const_lv2_0)) and (cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)) or (not((p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_1)) and not((p_load40_reg_698_pp1_iter1_reg = ap_const_lv2_0)) and (cmp_i_i533_i_reg_681 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln882_2_reg_689_pp1_iter1_reg = ap_const_lv1_1)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    cmp_i_i533_i_fu_509_p2 <= "1" when (unsigned(zext_ln882_1_fu_430_p1) < unsigned(img_height)) else "0";

    grp_xFGradientX3x3_0_0_s_fu_342_ap_ce_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_xFGradientX3x3_0_0_s_fu_342_ap_ce <= ap_const_logic_1;
        else 
            grp_xFGradientX3x3_0_0_s_fu_342_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_xFGradientY3x3_0_0_s_fu_359_ap_ce_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            grp_xFGradientY3x3_0_0_s_fu_359_ap_ce <= ap_const_logic_1;
        else 
            grp_xFGradientY3x3_0_0_s_fu_359_ap_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001_ignoreCallOp131)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001_ignoreCallOp131) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce <= ap_const_logic_1;
        else 
            grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln874_1_fu_601_p2 <= "1" when (add_ln695_1_fu_595_p2 = ap_const_lv13_3) else "0";
    icmp_ln874_2_fu_540_p2 <= "1" when (empty_41_reg_238_pp1_iter1_reg = ap_const_lv13_0) else "0";
    icmp_ln874_fu_464_p2 <= "1" when (empty_40_reg_226 = ap_const_lv13_1) else "0";
    icmp_ln882_1_fu_425_p2 <= "1" when (unsigned(zext_ln882_2_fu_421_p1) < unsigned(op2_assign_reg_672)) else "0";
    icmp_ln882_2_fu_522_p2 <= "1" when (unsigned(zext_ln882_3_fu_518_p1) < unsigned(img_width)) else "0";
    icmp_ln882_fu_396_p2 <= "1" when (unsigned(zext_ln882_fu_392_p1) < unsigned(img_width)) else "0";

    img_buf_1_473_blk_n_assign_proc : process(img_buf_1_473_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln882_reg_633, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln882_2_reg_689, cmp_i_i533_i_reg_681)
    begin
        if ((((cmp_i_i533_i_reg_681 = ap_const_lv1_1) and (icmp_ln882_2_reg_689 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln882_reg_633 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_buf_1_473_blk_n <= img_buf_1_473_empty_n;
        else 
            img_buf_1_473_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_buf_1_473_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln882_reg_633, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op91_read_state8, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_predicate_op91_read_state8 = ap_const_boolean_1)) or ((icmp_ln882_reg_633 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            img_buf_1_473_read <= ap_const_logic_1;
        else 
            img_buf_1_473_read <= ap_const_logic_0;
        end if; 
    end process;


    img_buf_1a_474_blk_n_assign_proc : process(img_buf_1a_474_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            img_buf_1a_474_blk_n <= img_buf_1a_474_full_n;
        else 
            img_buf_1a_474_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_buf_1a_474_din_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_CS_fsm_state15, grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_0, grp_xFGradientX3x3_0_0_s_fu_342_ap_return, ap_block_pp1_stage0_01001)
    begin
        if ((not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            img_buf_1a_474_din <= grp_xFGradientX3x3_0_0_s_fu_342_ap_return;
        elsif (((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001))) then 
            img_buf_1a_474_din <= grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_0;
        else 
            img_buf_1a_474_din <= "XXXXXXXX";
        end if; 
    end process;


    img_buf_1a_474_write_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_CS_fsm_state15, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            img_buf_1a_474_write <= ap_const_logic_1;
        else 
            img_buf_1a_474_write <= ap_const_logic_0;
        end if; 
    end process;


    img_buf_1b_475_blk_n_assign_proc : process(img_buf_1b_475_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_CS_fsm_state15)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state15) or ((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0)))) then 
            img_buf_1b_475_blk_n <= img_buf_1b_475_full_n;
        else 
            img_buf_1b_475_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    img_buf_1b_475_din_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_CS_fsm_state15, grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_1, grp_xFGradientY3x3_0_0_s_fu_359_ap_return, ap_block_pp1_stage0_01001)
    begin
        if ((not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            img_buf_1b_475_din <= grp_xFGradientY3x3_0_0_s_fu_359_ap_return;
        elsif (((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_01001))) then 
            img_buf_1b_475_din <= grp_xFSobel3x3_1_1_0_0_s_fu_325_ap_return_1;
        else 
            img_buf_1b_475_din <= "XXXXXXXX";
        end if; 
    end process;


    img_buf_1b_475_write_assign_proc : process(img_buf_1a_474_full_n, img_buf_1b_475_full_n, ap_enable_reg_pp1_iter6, icmp_ln874_2_reg_717_pp1_iter5_reg, ap_CS_fsm_state15, ap_block_pp1_stage0_11001)
    begin
        if ((((icmp_ln874_2_reg_717_pp1_iter5_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or (not(((img_buf_1b_475_full_n = ap_const_logic_0) or (img_buf_1a_474_full_n = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15)))) then 
            img_buf_1b_475_write <= ap_const_logic_1;
        else 
            img_buf_1b_475_write <= ap_const_logic_0;
        end if; 
    end process;

    img_height_cast_fu_412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(img_height),17));
    op2_assign_fu_415_p2 <= std_logic_vector(unsigned(img_height_cast_fu_412_p1) + unsigned(ap_const_lv17_1));
    select_ln373_1_fu_478_p3 <= 
        ap_const_lv2_0 when (icmp_ln874_fu_464_p2(0) = '1') else 
        empty_37_fu_98;
    select_ln373_2_fu_486_p3 <= 
        ap_const_lv2_2 when (icmp_ln874_fu_464_p2(0) = '1') else 
        empty_38_fu_102;
    select_ln373_fu_470_p3 <= 
        ap_const_lv2_1 when (icmp_ln874_fu_464_p2(0) = '1') else 
        empty_36_fu_94;
    select_ln451_fu_607_p3 <= 
        ap_const_lv13_0 when (icmp_ln874_1_fu_601_p2(0) = '1') else 
        add_ln695_1_fu_595_p2;
    trunc_ln324_fu_514_p1 <= empty_40_reg_226(2 - 1 downto 0);
    zext_ln538_1_fu_533_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_41_reg_238_pp1_iter1_reg),64));
    zext_ln538_fu_407_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_203),64));
    zext_ln882_1_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_39_reg_214),16));
    zext_ln882_2_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_39_reg_214),17));
    zext_ln882_3_fu_518_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_empty_41_phi_fu_242_p4),16));
    zext_ln882_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_reg_203),16));
end behav;
